[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "{{service_name}}-mcp"
version = "0.1.0"
description = "{{Service Description}} MCP Server"
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Development Status :: 3 - Alpha",
]
dependencies = [
    "httpx>=0.28.1",
    "mcp[cli]>=1.6.0",
    # Add your domain-specific dependencies here:
    # "azure-kusto-data",           # For Kusto/Azure Data Explorer
    # "azure-identity",             # For Azure authentication
    # "azure-devops",               # For Azure DevOps integration
    # "pandas>=1.5.0",              # For data manipulation
    # "numpy>=1.21.0",              # For numerical operations
]

[dependency-groups]
dev = [
    "ruff>=0.12.2",
    "mypy>=1.16.1",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "pytest-asyncio>=1.0.0",
    "pre-commit>=4.2.0"
]

[project.scripts]
{{service_name}}-mcp = "{{service_name}}_mcp.server:main"

[tool.setuptools]
package-dir = {"" = "src"}
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.md", "**/*.md"]

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_incomplete_defs = true
disallow_untyped_calls = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = false
warn_no_return = true
warn_unreachable = true
strict = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "integration: Integration tests that require external services",
    "unit: Unit tests that don't require external dependencies",
    "slow: Tests that take a long time to run",
]
