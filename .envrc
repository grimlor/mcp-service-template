#!/usr/bin/env bash

# Auto-activate uv virtual environment
if ! has uv; then
    echo "❌ uv is not installed. Please install it first:"
    echo "   curl -LsSf https://astral.sh/uv/install.sh | sh"
    exit 1
fi

# Create virtual environment if it doesn't exist
if [[ ! -d ".venv" ]]; then
    echo "📦 Creating virtual environment with uv..."
    uv venv
fi

# Activate the virtual environment
source .venv/bin/activate

# Sync dependencies (including dev dependencies)
echo "🔄 Syncing dependencies..."
# Use --all-extras for maximum compatibility with any dependency structure
# (works with both dependency-groups and optional-dependencies)
uv sync --all-extras

# Install pre-commit hooks if they don't exist
if [[ -f ".pre-commit-config.yaml" ]] && ! uv run pre-commit --version >/dev/null 2>&1; then
    echo "🪝 Installing pre-commit hooks..."
    uv run pre-commit install
fi

# Export environment variables
export PYTHONPATH="${PWD}/src:${PYTHONPATH}"
export UV_PROJECT_ENVIRONMENT="${PWD}/.venv"

# Git configuration for this project (optional)
# Uncomment and customize as needed:
# git config user.name "Your Name"
# git config user.email "your.email@example.com"

echo "✅ Environment activated!"
echo "📁 Virtual environment: ${VIRTUAL_ENV}"
echo "🐍 Python: $(python --version)"
echo "📦 uv: $(uv --version)"

# Show available commands
echo ""
echo "🚀 Available commands:"
echo "   uv run pytest                 # Run tests"
echo "   uv run pytest --cov           # Run tests with coverage report"
echo "   uv run pytest --cov --cov-report=html  # Generate HTML coverage report"
echo "   uv run ruff check             # Lint code"
echo "   uv run ruff format            # Format code"
echo "   uv run mypy src/              # Type check"
echo "   uv run pre-commit run --all   # Run all pre-commit hooks"
echo "   uv run python -m service_name_mcp.server  # Run MCP server"
